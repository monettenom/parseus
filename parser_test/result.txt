Running test case 1
1: |bool char short int long float double wchar_t signed unsigned|
Running test case 2
2: |asm auto break case catch class const const_cast continue default delete do dynamic_cast else enum explicit export|
3: |extern false for friend goto if inline mutable namespace new operator private protected public register|
4: |reinterpret_cast return sizeof static static_cast struct switch template this throw true try typedef typeid typename|
5: |union using virtual void volatile while|
Running test case 3
6: |alignas alignof char16_t char32_t constexpr decltype noexcept final nullptr override static_assert thread_local|
Running test case 4
7: |= += -= *= /= %= &= |= ^= <<= >>=|
Running test case 5
8: |+ - * / % ~ & | ^ << >> ++ --|
Running test case 6
9: |! && || == != < > <= >=|
Running test case 7
10: |[] -> . ->* .* ::|
Running test case 8
11: |?: ... , (){}|
Running test case 9
12: |1 2l 3u 4ul 5ll 6ull 2L 3U 4UL 5LL 6ULL|
Running test case 10
13: |01 -07 0x1 0xabcd 0xFEDCBA|
Running test case 11
14: |1.23456e-65 .1E4f 58. 4e2 1.6e-19 6.02e23f 3.14159L|
Running test case 12
15: |"test" "two
lines" L"wide chars"|
16: |"multi\|
17: |line"|
18: |"multiwrap 1st line\|
19: |second line\|
20: |third line"|
21: |""|
Running test case 13
22: |'a''b''
' ' '|
Running test case 14
23: |#define xyz(a) fc(a)|
24: |#define wrap(x) 1st line \|
25: |second line|
26: |#define multiwrap(x) 1st line \|
27: |second line \|
28: |third line|
Running test case 15
29: |//comment|
30: |// comment //|
31: |// wrapped line comment\|
32: |second part of line comment|
33: |/*block comment*/|
34: |///*block comment*/|
35: |/*block comment|
36: |two lines*/|
37: |/*block comment|
38: |three|
39: |lines*/|
40: |/*block comment*/ //line comment|
41: |/**/ //|
42: |/*|
43: |*/|
Running test case 16
44: |1+1|
Running test case 17
45: ||
Tokens checked: 175
Running test case 1
1: |ansichar ansistring array boolean byte bytebool cardinal char comp currency double extended int64|
2: |integer longbool longint longword olevariant pointer rawbytestring real real48 record shortint|
3: |shortstring single smallint string uint64 unicodestring variant widechar widestring word wordbool|
Running test case 2
4: |integer INTEGER Integer iNtEgEr|
Running test case 3
5: |absolute abstract add and as asm assembler at automated case cdecl class const constructor|
6: |contains default deprecated destructor dispid dispinterface div do downto dynamic else|
7: |except export exports external false file final finalization finally for forward function|
8: |goto helper if implementation implements in index inherited initialization inline interface|
9: |is label library local message mod name near nil nodefault not of on operator or out overload|
10: |package packed pascal platform pointermath private procedure program property protected public|
11: |published raise read readonly register reintroduce remove repeat requires resident resourcestring|
12: |result savecall scopedenums sealed set shl shr static stdcall stored strict then threadvar to true|
13: |try type unit unsafe until uses var varargs virtual while with write writeonly xor|
Running test case 4
14: |begin end|
Running test case 5
15: |+ - * / := = <> < <= > >= : ^ @ & , ; . .. ()[]|
Running test case 6
16: |(. .)|
Running test case 7
17: |//comment|
18: |// comment //|
19: |{block comment}|
20: |//{block comment}|
21: |{block comment|
22: |two lines}|
23: |{block comment|
24: |three|
25: |lines}|
26: |{block comment} //line comment|
27: |{} //|
28: |{|
29: |}|
30: |(*alternative comment*)|
Running test case 8
31: |1 $a $12ab34cd -100 $1$2|
Running test case 9
32: |1.23456e-65 .1E4 58. 4e2 1.6e-19 6.02e23 3.14159|
Running test case 10
33: |'test' '''' 'a''b' '''a'''|
Running test case 11
34: |#123 #$ff #1#2|
Running test case 12
35: |1+1|
Running test case 13
36: ||
Tokens checked: 219
Running test case 1
1: |bool boolean int integer float double string array object binary null|
Running test case 2
2: |__halt_compiler abstract and as break callable case catch class clone const|
3: |continue declare default die do echo else elseif empty enddeclare endfor|
4: |endforeach endif endswitch endwhile eval exit extends final for foreach|
5: |function global goto if implements include include_once instanceof insteadof|
6: |interface isset list namespace new or print private protected public require|
7: |require_once return static unset switch throw trait try unset use var while xor|
Running test case 3
8: |= += -= *= /= %= &= |= ^= <<= >>=|
Running test case 4
9: |+ - * / % ~ & | ^ << >> ++ --|
Running test case 5
10: |! && || == != === !== < > <= >=|
Running test case 6
11: |? . , -> => ()[]{}|
Running test case 7
12: |1 200 01 -07 0x1 0xabcd 0xFEDCBA|
Running test case 8
13: |1.23456e-65 .1E4 58. 4e2 1.6e-19 6.02e23 3.14159|
Running test case 9
14: |'single quoted' "double quoted" "two
lines" b"binary string"|
15: |`backticks`|
Running test case 10
16: |$ $a $$b $$$c|
Running test case 11
17: |//comment|
18: |// comment //|
19: |/*block comment*/|
20: |///*block comment*/|
21: |/*block comment|
22: |two lines*/|
23: |/*block comment|
24: |three|
25: |lines*/|
26: |/*block comment*/ //line comment|
27: |/**/ //|
28: |/*|
29: |*/|
30: |#scriptlike comment|
Running test case 12
31: |$a = <<< HTEXT|
32: |Das ist ein langer Text,|
33: |der über mehrere Zeilen geht.|
34: |HTEXT;|
35: |<<<HTEXT|
36: |HTEXT;|
37: |<<<'NOWDOC'|
38: |Nowdoctest|
39: |NOWDOC;|
Running test case 13
40: |1+1|
Running test case 14
41: ||
Tokens checked: 182
Running test case 1
1: |#import import|
Running test case 2
2: |#define define|
Running test case 3
3: |#undef undef|
Running test case 4
4: |#ifdef ifdef|
Running test case 5
5: |#ifndef ifndef|
Running test case 6
6: |#endif endif|
Running test case 7
7: |#line line|
Running test case 8
8: |#ident ident|
Running test case 9
9: |#sccs sccs|
Running test case 10
10: |#assert assert|
Running test case 11
11: |#unassert unassert|
Running test case 12
12: |#include include|
Running test case 13
13: |#include_next include_next|
Running test case 14
14: |#if if defined defined|
Running test case 15
15: |#else if defined|
Running test case 16
16: |#elif defined|
Running test case 17
17: |# # ( , ) ## ...|
18: |# + - * / % ! && || & | ^ ~ == != < <= > >= << >>|
Running test case 18
19: |#define MAX 1024|
20: | #define MAX 1024|
21: |# define MAX 1024|
Running test case 19
22: |// #define MAX 1024|
Running test case 20
23: |#define MAX 1024 // any comment|
Running test case 21
24: |#define a 1 //wrap\|
25: |line|
Running test case 22
26: |#define MAX (1<</*shl*/10)/*1024*/|
Running test case 23
27: |#define MAX /* this is|
28: |a multiline comment|
29: |*/ 1024|
Running test case 24
30: |#define MAX\|
31: |1024|
Running test case 25
32: |#  define  MAX	1024	 |
Running test case 26
33: |int a=1;|
34: |int define();|
Running test case 27
35: |"test"|
36: |"multi\|
37: |line"|
38: |"multi\|
39: |line\|
40: |string"|
41: |'c'|
42: |'"'|
Running test case 28
43: |#include "test.h"|
44: |#include <test>|
45: |#include SYSTEM_H|
46: |#define SYSTEM_H <system.h>|
Running test case 29
47: |#define inc(a) a++|
Running test case 30
48: |#define make_list(varname, type, ...) type varname[] = {__VA_ARGS__, (type)-1}|
Running test case 31
49: |#define MK_STRING(string) #string|
Running test case 32
50: |#define CONCAT(a, b) a##b|
Running test case 33
51: |#ifdef MACRO|
52: |#ifndef MACRO|
53: |#endif|
Running test case 34
54: |#if defined(X) || defined(Y)|
Running test case 35
55: |#line 20 "vector"|
Running test case 36
56: |#error Error|
57: |#warning Warning|
Running test case 37
58: |<% %> <: :> %:|
Running test case 38
59: |??< ??> ??( ??) ??' ??! ??- ??= ??/ ?? ?|
Running test case 39
60: |#if 1+1|
Running test case 40
61: ||
Tokens checked: 305
Running test case 1
1: |#define A (5+5)|
2: |#if A*2|
Running test case 2
3: |#if 1|
Running test case 3
4: |#if 1+1|
Running test case 4
5: |#if 4-2|
Running test case 5
6: |#if 1+1+3|
Running test case 6
7: |#if 2+2*3|
Running test case 7
8: |#if (2+2)*3|
Running test case 8
9: |#if (2+2)*(3-1)|
Running test case 9
10: |#if (2+2)/(3-1)|
Running test case 10
11: |#if 2<<2|
Running test case 11
12: |#if 7>>2|
Running test case 12
13: |#if 2<<2>>1|
Running test case 13
14: |#if 1&&1|
Running test case 14
15: |#if 0&&1|
Running test case 15
16: |#if 1&&0|
Running test case 16
17: |#if 1&&1&&1|
Running test case 17
18: |#if 1||1|
Running test case 18
19: |#if 1||0|
Running test case 19
20: |#if 0||1|
Running test case 20
21: |#if 0||0|
Running test case 21
22: |#if 0||0||1|
Running test case 22
23: |#if 1&&1||0&&1|
Running test case 23
24: |#if 1&&0||0&&1|
Running test case 24
25: |#if 1||0&&1||0|
Running test case 25
26: |#if !1|
Running test case 26
27: |#if 1&3|
Running test case 27
28: |#if 5&2|
Running test case 28
29: |#if 7&5&3|
Running test case 29
30: |#if 1^3|
Running test case 30
31: |#if 3^3|
Running test case 31
32: |#if 1^2^4|
Running test case 32
33: |#if 3|6|
Running test case 33
34: |#if 15|(15<<4)|
Running test case 34
35: |#if 3&6|1&5|
Running test case 35
36: |#if 5==3+2|
Running test case 36
37: |#if 2*3==3+2|
Running test case 37
38: |#if 2*3==4+2==7-6|
Running test case 38
39: |#if 1!=2|
Running test case 39
40: |#if -2|
Running test case 40
41: |#if -2+-1|
Running test case 41
42: |#if -(2-4)|
Running test case 42
43: |#if 0xa|
Running test case 43
44: |#if 0xFF|
Running test case 44
45: |#if 0xaBcDeF|
Running test case 45
46: |#if 010|
Running test case 46
47: |#if 0xa*0xa|
Running test case 47
48: |#if 'A'|
Running test case 48
49: |#if 'A'+' '|
Running test case 49
50: |#define A 1|
51: |#if A|
Running test case 50
52: |#define A 1|
53: |#if A*2|
Running test case 51
54: |#define A (5+5)|
55: |#if A*2|
Running test case 52
56: |#define A(x) (x*x)|
57: |#if A(4)|
Running test case 53
58: |#define A(x,y) (x*y)|
59: |#if A(2,3)|
Running test case 54
60: |#define A(a,b,c) (a*b*c)|
61: |#if A((1+1),3,(8/2))|
Running test case 55
62: |#define A(a) (a*2)|
63: |#define B(a) (a*3)|
64: |#if A(2)+B(2)|
Running test case 56
65: |#define A 100|
66: |#define B(a) (a*2)|
67: |#if B(A)|
Running test case 57
68: |#define A(a) (a*2)|
69: |#define X 5|
70: |#if A(A(X))|
Running test case 58
71: |#if NOT_DEFINED_MACRO|
Running test case 59
72: |#define A|
73: |#if defined(A)|
Running test case 60
74: |#if !defined(UNDEFINED_MACRO)|
Running test case 61
75: |#if defined(A) && defined B && !defined(((NOT_DEFINED)))|
Running test case 62
76: |#define A|
77: |#if !defined(A)|
Running test case 63
78: |#define A 1|
79: |#if A ? 22 : 11|
Running test case 64
80: |#define A 0|
81: |#if A ? 22 : 11|
Running test case 65
82: |#define A 1|
83: |#define B 0|
84: |#if A ? (B ? 11 : 22) : 33|
Tokens checked: 305
Running test case 1
1: | |
CPP-Code:  
2: |4;|
CPP-Code: 4;
3: |2;|
CPP-Code: 2;
Running test case 2
4: |ok|
CPP-Code: ok
Running test case 3
5: |ok|
CPP-Code: ok
Running test case 4
6: |ok|
CPP-Code: ok
Running test case 5
7: |ok|
CPP-Code: ok
Running test case 6
8: |ok|
CPP-Code: ok
Running test case 7
9: |ok|
CPP-Code: ok
Running test case 8
10: |ok|
CPP-Code: ok
Running test case 9
11: | |
CPP-Code:  
12: |ok|
CPP-Code: ok
Running test case 10
13: |ok|
CPP-Code: ok
Running test case 11
14: |ok|
CPP-Code: ok
Running test case 12
15: |ok|
CPP-Code: ok
Running test case 13
16: |ok|
CPP-Code: ok
Running test case 14
17: | |
CPP-Code:  
18: |ok|
CPP-Code: ok
19: | |
CPP-Code:  
Running test case 15
20: | |
CPP-Code:  
21: |ok|
CPP-Code: ok
Running test case 16
22: |ok;|
CPP-Code: ok;
Running test case 17
23: |ok;|
CPP-Code: ok;
Running test case 18
24: |"ok";|
CPP-Code: "ok";
Running test case 19
25: | |
CPP-Code:  
26: |ok|
CPP-Code: ok
Running test case 20
27: | |
CPP-Code:  
28: |ok|
CPP-Code: ok
29: | |
CPP-Code:  
Running test case 21
30: | |
CPP-Code:  
31: | |
CPP-Code:  
32: |ok|
CPP-Code: ok
33: |ok|
CPP-Code: ok
Running test case 22
34: |1;|
CPP-Code: 1;
35: |2;|
CPP-Code: 2;
Running test case 23
36: | |
CPP-Code:  
37: |"test.h";|
CPP-Code: "test.h";
Running test case 24
38: | |
CPP-Code:  
39: |4;|
CPP-Code: 4;
40: |2;|
CPP-Code: 2;
Running test case 25
41: | |
CPP-Code:  
42: |ok;|
CPP-Code: ok;
43: | |
CPP-Code:  
Running test case 26
44: |ok|
CPP-Code: ok
Running test case 27
45: |ok|
CPP-Code: ok
Running test case 28
Running test case 29
46: | |
CPP-Code:  
47: |ok;|
CPP-Code: ok;
48: | |
CPP-Code:  
Running test case 30
49: |ok;|
CPP-Code: ok;
Running test case 31
50: |ok;|
CPP-Code: ok;
51: |ok;|
CPP-Code: ok;
Running test case 32
52: |ok;|
CPP-Code: ok;
53: |ok;|
CPP-Code: ok;
Running test case 33
54: | |
CPP-Code:  
55: |ok;|
CPP-Code: ok;
Running test case 34
56: |((2));|
CPP-Code: ((2));
Running test case 35
57: |;|
CPP-Code: ;
Running test case 36
58: |(1 == 2);|
CPP-Code: (1 == 2);
Tokens checked: 69
0 of 186 tests failed!
